
@{
    ViewData["Title"] = "AutoComplete";
}

<h1>AutoComplete</h1>
<div class=" row">
    <div class="col-3"></div>
    <div class="col-6">
        <h3>AutoComplete</h3>
        <input type="text" class="form-control" id="autoComplet" />
        <div class="list-group">
            <button type="button" class="list-group-item list-group-item-action " aria-current="true">
                The current button
            </button>
            <button type="button" class="list-group-item list-group-item-action">A second item</button>
            <button type="button" class="list-group-item list-group-item-action">A third button item</button>
            <button type="button" class="list-group-item list-group-item-action">A fourth button item</button>
            <button type="button" class="list-group-item list-group-item-action" disabled>A disabled button item</button>
        </div>
    </div>
    <div class="col-3"></div>
</div>


@section Scripts{ 
    <script>
        const input = document.querySelector("#autoComplet")
        const listData = document.querySelector(".list-group")

        listData.style.display = "none"
        input.addEventListener("input", async() => {
            const keyword = input.value;
            listData.style.display = "block"
            let response = await fetch("@Url.Content("~/api/search")" + `?keyword=${keyword}`);
            let datas = response.json();
            //console.log(datas)
            let htmlData = datas.map(data => {
                return (
                    `
                <button type="button" onclick="read(event)" class="list-group-item list-group-item-action">${data}</button>
                `)
            })
            listData.innerHTML = htmlData.join("");

        })

        function read(event) {
            input.value = event.target.textcontent;
            listData.style.display = "none";
        }

    </script>

}
